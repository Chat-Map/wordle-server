// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: player.sql

package pgen

import (
	"context"
)

const addPlayer = `-- name: AddPlayer :exec
INSERT INTO player (username, password) VALUES ($1, $2)
`

type AddPlayerParams struct {
	Username string
	Password string
}

func (q *Queries) AddPlayer(ctx context.Context, arg AddPlayerParams) error {
	_, err := q.db.Exec(ctx, addPlayer, arg.Username, arg.Password)
	return err
}

const fetchPlayerByUsername = `-- name: FetchPlayerByUsername :one
SELECT id, username, password FROM player WHERE username = $1
`

func (q *Queries) FetchPlayerByUsername(ctx context.Context, username string) (Player, error) {
	row := q.db.QueryRow(ctx, fetchPlayerByUsername, username)
	var i Player
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}
